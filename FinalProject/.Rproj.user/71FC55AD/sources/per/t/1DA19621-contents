---
title: "Assignment7"
author: "Haojin Li (Declan)"
date: "2020/7/30"
output: pdf_document
toc: true
---

# 8.3.1 Fitting Classification Trees

```{r}
library(tree)
library(ISLR)
data(Carseats)
High=ifelse(Carseats$Sales<=8,as.factor("No"),as.factor("Yes"))
Carseats=data.frame(Carseats,High)
tree.carseats=tree(High~.-Sales,Carseats)
plot(tree.carseats)
text(tree.carseats,pretty=0)
tree.carseats
summary(tree.carseats)
```


```{r}
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
```

```{r}
tree.carseats =tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
```


```{r}
set.seed(3)
cv.carseats=cv.tree(tree.carseats,FUN=prune.misclass)
names(cv.carseats)
cv.carseats
```
```{r}
par(mfrow=c(1,2))
plot(cv.carseats$size,cv.carseats$dev,type="b")
```

```{r}
prune.carseats=prune.misclass(tree.carseats,best=9)
plot(prune.carseats)
text(prune.carseats,pretty =0)
```

```{r}
tree.pred=predict(prune.carseats,Carseats.test,type="class")
table(tree.pred ,High.test)
```


# 8.3.2 Fitting Regression Trees
```{r}
library(tree)
library(MASS)
set.seed(1)
train=sample(1:nrow(Boston),nrow(Boston)/2)
tree.boston=tree(medv~.,Boston,subset=train)
summary(tree.boston)
```

```{r}
plot(tree.boston)
text(tree.boston,pretty=0)
```

```{r}
cv.boston=cv.tree(tree.boston)
plot(cv.boston$size,cv.boston$dev,type='b')
```
```{r}
yhat=predict(tree.boston,newdata=Boston[-train,])
boston.test=Boston[-train,"medv"]
plot(yhat,boston.test)
abline(0,1)
```
```{r}
mean((yhat-boston.test)^2)
```

# 8.3.3 Bagging and Random Forests

```{r}
library(randomForest)
set.seed(1)
bag.boston = randomForest(medv~., data = Boston, mtry = 13, importance = TRUE)
bag.boston
```
```{r}
yhat.bag = predict(bag.boston, newdata = Boston[-train,])
plot(yhat.bag, boston.test)
abline(0,1)
mean((yhat.bag-boston.test)^2)
```

```{r}
bag.boston = randomForest(medv~., data =  Boston, mtry = 13, ntree = 25)
yhat.bag = predict(bag.boston, newdata = Boston[-train,])
mean((yhat.bag-boston.test)^2)
```

```{r}
set.seed(1)
rf.boston= randomForest(medv~.,data=Boston , subset=train ,mtry=6, 
importance =TRUE)
yhat.rf = predict(rf.boston ,newdata=Boston[-train ,])
mean((yhat.rf-boston.test)^2)
```

```{r}
importance (rf.boston)
varImpPlot (rf.boston)
```

