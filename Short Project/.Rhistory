shiny::runApp('ShortProject')
?dropdownMenu
runApp('ShortProject')
runApp('ShortProject')
library(readr)
latimes_state_totals <- read_csv("california-coronavirus-data/latimes-state-totals.csv",
col_types = cols(date = col_character(),
confirmed_cases = col_number(), deaths = col_number(),
new_confirmed_cases = col_number(),
new_deaths = col_number()))
View(latimes_state_totals)
runApp('ShortProject')
runApp('ShortProject')
library(readr)
latimes_state_totals <- read_csv("california-coronavirus-data/latimes-state-totals.csv",
col_types = cols(date = col_character(),
confirmed_cases = col_number(), deaths = col_number(),
new_confirmed_cases = col_number(),
new_deaths = col_number()))
View(latimes_state_totals)
runApp('ShortProject')
runApp('ShortProject')
runApp('ShortProject')
runApp('ShortProject')
runApp('ShortProject')
runApp('ShortProject')
runApp('ShortProject')
latimes_state_totals$date
shiny::runApp('ShortProject')
library(readr)
latimes_place_totals <- read_csv("california-coronavirus-data/latimes-place-totals.csv")
View(latimes_place_totals)
runApp('ShortProject')
latimes_state_totals <- read.csv("latimes-state-totals.csv")
latimes_county_totals <- read.csv("latimes-county-totals.csv")
latimes_state_totals <- read.csv("latimes-state-totals.csv", T)
setwd("C:/Users/19132/OneDrive/tech/R/Short Project/ShortProject")
latimes_state_totals <- read.csv("latimes-state-totals.csv", T)
latimes_county_totals <- read.csv("latimes-county-totals.csv", T)
latimes-county-totals$data
latimes-county-totals$date
latimes_county_totals$date
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?varSelectInput
runApp()
data(latimes_state_totals)
latimes_county_totals
latimes_state_totals <- read.csv("latimes-state-totals.csv", header = true, row.names = 1)
latimes_state_totals <- read.csv("latimes-state-totals.csv", header = TRUE, row.names = 1)
latimes_state_totals <- read.csv("latimes-state-totals.csv", row.names = 1)
variable_data = row.names(latimes_state_totals)
variable_data
runApp()
runApp()
runApp()
View(latimes_county_totals)
View(latimes_county_totals)
plot(latimes_state_totals$confirmed_cases, latimes_state_totals$deaths)
pairs(latimes_county_totals)
pairs(latimes_state_totals[, -2])
pairs(latimes_state_totals[, -1])
pairs(latimes_state_totals[, -2])
latimes_state_totals[, -2]
latimes_state_totals[, -1]
pairs(latimes_state_totals[-2])
latimes_state_totals[-2]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?plot()
runApp()
runApp()
runApp()
runApp()
input$AxisX
#plot(input$x, input$y)
input$x
#plot(input$x, input$y)
input$Y
str(latimes_state_totals)
runApp()
runApp()
原文链接：https://blog.csdn.net/weixin_42933967/java/article/details/96199966
runApp('test.R')
runApp()
runApp()
runApp()
latimes_state_totals <- read.csv("latimes-state-totals.csv")
latimes_state_totals$date <- as.Date(latimes_state_totals$date, "%y-%m-%d")
latimes_state_totals <- read.csv("latimes-state-totals.csv")
latimes_state_totals$date <- as.Date(latimes_state_totals$date, "%Y-%m-%d")
runApp()
runApp()
runApp()
runApp()
?scale_x_date()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dashboardHeader
runApp()
runApp()
runApp()
?dashboardSidebar
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dateRangeInput()
runApp()
runApp()
?scale_x_date
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?infoBox
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
states=row.names(USArrests)
states
names(USArrests)
apply(USArrests, 2, mean)
apply(USArrests , 2, var)
pr.out=prcomp(USArrests , scale=TRUE)
pr.out=prcomp(USArrests , scale=TRUE)
names(pr.out)
pr.out$center
pr.out$scale
dim(pr.out$x)
biplot (pr.out , scale =0)
pr.out$rotation=-pr.out$rotation
pr.out$x=-pr.out$x
biplot (pr.out , scale =0)
pr.out$sdev
pr.var=pr.out$sdev ^2
pr.var
pve=pr.var/sum(pr.var)
pve
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1), type='b')
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1), type='a')
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1), type='c')
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1), type='b')
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1), type='b')
plot(cumsum(pve), xlab="Principal Component", ylab="Cumulative Proportion of Variance Explained", ylim=c(0,1), type='b')
cumsum(a)
a=c(1,2,8,-3)
cumsum(a)
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1), type='b')
plot(cumsum(pve), xlab="Principal Component", ylab="Cumulative Proportion of Variance Explained",
ylim=c(0,1), type='b')
install.packages("flexdashboard")
